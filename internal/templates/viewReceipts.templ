package templates

import (
	"fmt"
	"github.com/Light2Dark/splitpay/models"
)

templ ReceiptLayout(receipt models.ReceiptView) {
	@Layout(ContainerDiv(ReceiptView(receipt)))
}

templ ReceiptView(receipt models.ReceiptView) {
	@templ.JSONScript("receipt", receipt)
	<script type="text/javascript">
		const receipt = JSON.parse(document.getElementById("receipt").textContent)
		if (window.Alpine === undefined) {
			console.error("Alpine is not loaded")
			document.addEventListener('alpine:init', () => {
				initializeData()
			})
		} else {
			initializeData()
		}

		function initializeData() {
			Alpine.data('receipt', () => ({
				receipt: receipt,
				selectedAmount: 0.00,
				displayFirstForm: true,

				get totalAmount() {
					return this.selectedAmount;
				},
				updateSelectedAmount() {
					let rowsWithChecked = document.querySelectorAll(`input[type='checkbox']:checked`);
					let newAmount = 0;
					rowsWithChecked.forEach(row => {
						let priceCell = row.closest('tr').querySelector('td:nth-child(3) p');
						if (priceCell) {
							newAmount += parseFloat(priceCell.textContent);
						}
					});
					this.selectedAmount = newAmount.toFixed(2);
				},
			}))
		}
	</script>
	<div x-data="receipt" class="w-5/6 mb-10">
		<form
			method="POST"
			hx-post="/payReceipt"
			hx-target="#secondForm"
			:hx-vals="JSON.stringify({ receiptID: receipt.ID, totalAmount: totalAmount })"
		>
			<div id="secondForm"></div>
			<div x-show="displayFirstForm">
				<p class="mt-4 text-center text-sm">(Tax-included receipt)</p>
				<table class="mt-10">
					<thead>
						<tr>
							<th>Description</th>
							<th>Qty</th>
							<th>Price</th>
						</tr>
					</thead>
					for i, item := range receipt.Items {
						<tr>
							<td nowrap class="flex flex-row gap-1">
								<input
									type="checkbox"
									disabled?={ item.Paid }
									@click="updateSelectedAmount"
									name={ fmt.Sprintf("%d", item.ID) }
									id={ fmt.Sprintf("itemCheckbox-%d", i) }
								/>
								@StrikedText(item.Paid) {
									<label for={ fmt.Sprintf("%d", item.ID) }>
										<p class="text-sm">{ item.Name }</p>
									</label>
								}
							</td>
							<td>
								@StrikedText(item.Paid) {
									<span>{ fmt.Sprint(item.Quantity) }</span>
								}
							</td>
							<td>
								@StrikedText(item.Paid) {
									<p>{ fmt.Sprintf("%.2f", item.Price) }</p>
								}
							</td>
						</tr>
					}
					<tfoot class="border-t border-black font-semibold">
						<tr class="font-extrabold border-b border-black">
							<td colspan="2">Total</td>
							<td>{ fmt.Sprintf("%.2f", receipt.TotalAmount) }</td>
						</tr>
					</tfoot>
				</table>
				<div class="flex flex-col items-center mt-6 gap-6">
					<p>You owe <b x-text="selectedAmount"></b></p>
					<button @click="displayFirstForm = false" class="border border-black rounded-md bg-black text-white w-min px-3 py-1">Pay</button>
				</div>
			</div>
		</form>
	</div>
}

templ StrikedText(isStriked bool) {
	if isStriked {
		<s>
			{ children... }
		</s>
	} else {
		{ children... }
	}
}

func orderOptions(receiptID int) string {
	return fmt.Sprintf(`{'receiptID': '%d'}`, receiptID)
}
